#!/usr/bin/env python3

import pandas as pd

maf_file_path = "/home/davidvh/VanDenBoutLab/6767_variant_analysis/analysis/MAF_analysis/6767O_mutect_filtered_bed.maf"

maf_df = pd.read_csv(maf_file_path, sep=',', comment='#', header=None)
maf_df.columns= ["Hugo_Symbol","Entrez_Gene_Id","Center","NCBI_Build","Chromosome","Start_Position","End_Position","Strand","Variant_Classification","Variant_Type","Reference_Allele","Tumor_Seq_Allele1","Tumor_Seq_Allele2","dbSNP_RS","dbSNP_Val_Status","Tumor_Sample_Barcode","Matched_Norm_Sample_Barcode","Match_Norm_Seq_Allele1","Match_Norm_Seq_Allele2","Tumor_Validation_Allele1","Tumor_Validation_Allele2","Match_Norm_Validation_Allele1","Match_Norm_Validation_Allele2","Verification_Status","Validation_Status","Mutation_Status","Sequencing_Phase","Sequence_Source","Validation_Method","Score","BAM_File","Sequencer","Tumor_Sample_UUID","Matched_Norm_Sample_UUID","Genome_Change","Annotation_Transcript","Transcript_Strand","Transcript_Exon","Transcript_Position","cDNA_Change","Codon_Change","Protein_Change","Other_Transcripts","Refseq_mRNA_Id","Refseq_prot_Id","SwissProt_acc_Id","SwissProt_entry_Id","Description","UniProt_AApos","UniProt_Region","UniProt_Site","UniProt_Natural_Variations","UniProt_Experimental_Info","GO_Biological_Process","GO_Cellular_Component","GO_Molecular_Function","COSMIC_overlapping_mutations","COSMIC_fusion_genes","COSMIC_tissue_types_affected","COSMIC_total_alterations_in_gene","Tumorscape_Amplification_Peaks","Tumorscape_Deletion_Peaks","TCGAscape_Amplification_Peaks","TCGAscape_Deletion_Peaks","DrugBank","ref_context","gc_content","CCLE_ONCOMAP_overlapping_mutations","CCLE_ONCOMAP_total_mutations_in_gene","CGC_Mutation_Type","CGC_Translocation_Partner","CGC_Tumor_Types_Somatic","CGC_Tumor_Types_Germline","CGC_Other_Diseases","DNARepairGenes_Activity_linked_to_OMIM","FamilialCancerDatabase_Syndromes","MUTSIG_Published_Results","OREGANNO_ID","OREGANNO_Values","tumor_f","t_alt_count","t_ref_count","n_alt_count","n_ref_count","Gencode_43_secondaryVariantClassification","Achilles_Top_Genes","CGC_Name","CGC_GeneID","CGC_Chr","CGC_Chr_Band","CGC_Cancer_Somatic_Mut","CGC_Cancer_Germline_Mut","CGC_Cancer_Syndrome","CGC_Tissue_Type","CGC_Cancer_Molecular_Genetics","CGC_Other_Germline_Mut","ClinVar_HGMD_ID","ClinVar_SYM","ClinVar_TYPE","ClinVar_ASSEMBLY","ClinVar_rs","ClinVar_VCF_AF_ESP","ClinVar_VCF_AF_EXAC","ClinVar_VCF_AF_TGP","ClinVar_VCF_ALLELEID","ClinVar_VCF_CLNDISDB","ClinVar_VCF_CLNDISDBINCL","ClinVar_VCF_CLNDN","ClinVar_VCF_CLNDNINCL","ClinVar_VCF_CLNHGVS","ClinVar_VCF_CLNREVSTAT","ClinVar_VCF_CLNSIG","ClinVar_VCF_CLNSIGCONF","ClinVar_VCF_CLNSIGINCL","ClinVar_VCF_CLNVC","ClinVar_VCF_CLNVCSO","ClinVar_VCF_CLNVI","ClinVar_VCF_DBVARID","ClinVar_VCF_GENEINFO","ClinVar_VCF_MC","ClinVar_VCF_ORIGIN","ClinVar_VCF_RS","ClinVar_VCF_ID","ClinVar_VCF_FILTER","CosmicFusion_fusion_id","DNARepairGenes_Chromosome_location_linked_to_Genome_Data_Viewer","DNARepairGenes_Accession_number_linked_to_NCBI_Entrez","Familial_Cancer_Genes_Synonym","Familial_Cancer_Genes_Reference","Gencode_XHGNC_hgnc_id","HGNC_HGNC_ID","HGNC_Approved_name","HGNC_Status","HGNC_Locus_type","HGNC_Locus_group","HGNC_Previous_symbols","HGNC_Previous_name","HGNC_Alias_symbols","HGNC_Alias_names","HGNC_Chromosome","HGNC_Date_modified","HGNC_Date_symbol_changed","HGNC_Date_name_changed","HGNC_Accession_numbers","HGNC_Enzyme_IDs","HGNC_NCBI_Gene_ID","HGNC_Ensembl_gene_ID","HGNC_Pubmed_IDs","HGNC_RefSeq_IDs","HGNC_Gene_group_ID","HGNC_Gene_group_name","HGNC_CCDS_IDs","HGNC_Vega_IDs","HGNC_NCBI_Gene_ID(supplied_by_NCBI)","HGNC_OMIM_ID(supplied_by_OMIM)","HGNC_RefSeq(supplied_by_NCBI)","HGNC_UniProt_ID(supplied_by_UniProt)","HGNC_Ensembl_ID(supplied_by_Ensembl)","HGNC_UCSC_ID(supplied_by_UCSC)","Oreganno_Build","Simple_Uniprot_alt_uniprot_accessions","dbSNP_ASP","dbSNP_ASS","dbSNP_CAF","dbSNP_CDA","dbSNP_CFL","dbSNP_COMMON","dbSNP_DSS","dbSNP_G5","dbSNP_G5A","dbSNP_GENEINFO","dbSNP_GNO","dbSNP_HD","dbSNP_INT","dbSNP_KGPhase1","dbSNP_KGPhase3","dbSNP_LSD","dbSNP_MTP","dbSNP_MUT","dbSNP_NOC","dbSNP_NOV","dbSNP_NSF","dbSNP_NSM","dbSNP_NSN","dbSNP_OM","dbSNP_OTH","dbSNP_PM","dbSNP_PMC","dbSNP_R3","dbSNP_R5","dbSNP_REF","dbSNP_RV","dbSNP_S3D","dbSNP_SAO","dbSNP_SLO","dbSNP_SSR","dbSNP_SYN","dbSNP_TOPMED","dbSNP_TPA","dbSNP_U3","dbSNP_U5","dbSNP_VC","dbSNP_VP","dbSNP_WGT","dbSNP_WTD","dbSNP_dbSNPBuildID","dbSNP_ID","dbSNP_FILTER","dbSNP_RSPOS","dbSNP_VLD","AS_FilterStatus","AS_SB_TABLE","AS_UNIQ_ALT_READ_COUNT","CONTQ","DP","ECNT","GERMQ","MBQ","MFRL","MMQ","MPOS","NALOD","NCount","NLOD","OCM","PON","POPAF","ROQ","RPA","RU","SEQQ","STR","STRANDQ","STRQ","TLOD"]
df_filtered = maf_df[maf_df['COSMIC_overlapping_mutations'].notna()]
df_filtered.to_csv('COSMIC_only_organoid.csv', index=False)
